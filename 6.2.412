To: vim-dev@vim.org
Subject: Patch 6.2.412
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
------------

Patch 6.2.412
Problem:    Ruby: "ruby << EOF" inside a function doesn't always work.  Also
	    for ":python", ":tcl" and ":perl".
Solution:   Check for "<< marker" and skip until "marker" before checking for
	    "endfunction".
Files:	    src/eval.c


*** ../vim-6.2.411/src/eval.c	Mon Mar 29 14:32:19 2004
--- src/eval.c	Mon Mar 29 15:25:42 2004
***************
*** 8696,8702 ****
      ufunc_T	*fp;
      int		indent;
      int		nesting;
!     int		in_append = FALSE;
      static char_u e_funcexts[] = N_("E122: Function %s already exists, add ! to replace it");
  
      /*
--- 8698,8704 ----
      ufunc_T	*fp;
      int		indent;
      int		nesting;
!     char_u	*skip_until = NULL;
      static char_u e_funcexts[] = N_("E122: Function %s already exists, add ! to replace it");
  
      /*
***************
*** 8899,8909 ****
  	    goto erret;
  	}
  
! 	if (in_append)
  	{
! 	    /* between ":append" and "." there is no check for ":endfunc". */
! 	    if (theline[0] == '.' && theline[1] == NUL)
! 		in_append = FALSE;
  	}
  	else
  	{
--- 8901,8915 ----
  	    goto erret;
  	}
  
! 	if (skip_until != NULL)
  	{
! 	    /* between ":append" and "." and between ":python <<EOF" and "EOF"
! 	     * don't check for ":endfunc". */
! 	    if (STRCMP(theline, skip_until) == 0)
! 	    {
! 		vim_free(skip_until);
! 		skip_until = NULL;
! 	    }
  	}
  	else
  	{
***************
*** 8948,8954 ****
  		    || (p[0] == 'i'
  			&& (!ASCII_ISALPHA(p[1]) || (p[1] == 'n'
  				&& (!ASCII_ISALPHA(p[2]) || (p[2] == 's'))))))
! 		in_append = TRUE;
  	}
  
  	/* Add the line to the function. */
--- 8954,8981 ----
  		    || (p[0] == 'i'
  			&& (!ASCII_ISALPHA(p[1]) || (p[1] == 'n'
  				&& (!ASCII_ISALPHA(p[2]) || (p[2] == 's'))))))
! 		skip_until = vim_strsave((char_u *)".");
! 
! 	    /* Check for ":python <<EOF", ":tcl <<EOF", etc. */
! 	    arg = skipwhite(skiptowhite(p));
! 	    if (arg[0] == '<' && arg[1] =='<'
! 		    && ((p[0] == 'p' && p[1] == 'y'
! 				    && (!ASCII_ISALPHA(p[2]) || p[2] == 't'))
! 			|| (p[0] == 'p' && p[1] == 'e'
! 				    && (!ASCII_ISALPHA(p[2]) || p[2] == 'r'))
! 			|| (p[0] == 't' && p[1] == 'c'
! 				    && (!ASCII_ISALPHA(p[2]) || p[2] == 'l'))
! 			|| (p[0] == 'r' && p[1] == 'u' && p[2] == 'b'
! 				    && (!ASCII_ISALPHA(p[3]) || p[3] == 'y'))
! 			))
! 	    {
! 		/* ":python <<" continues until a dot, like ":append" */
! 		p = skipwhite(arg + 2);
! 		if (*p == NUL)
! 		    skip_until = vim_strsave((char_u *)".");
! 		else
! 		    skip_until = vim_strsave(p);
! 	    }
  	}
  
  	/* Add the line to the function. */
***************
*** 9004,9012 ****
--- 9031,9041 ----
  #ifdef FEAT_MAGIC_BRACES
      did_emsg |= saved_did_emsg;
  #endif
+     vim_free(skip_until);
      return;
  
  erret:
+     vim_free(skip_until);
      ga_clear_strings(&newargs);
      ga_clear_strings(&newlines);
  erret_name:
*** ../vim-6.2.411/src/version.c	Mon Mar 29 14:32:19 2004
--- src/version.c	Mon Mar 29 16:11:00 2004
***************
*** 639,640 ****
--- 639,642 ----
  {   /* Add new patch number below this line */
+ /**/
+     412,
  /**/

-- 
If Microsoft would build a car...
... the oil, water temperature, and alternator warning lights would
all be replaced by a single "General Protection Fault" warning light.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        Sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\              Project leader for A-A-P -- http://www.A-A-P.org        ///
 \\\  Buy at Amazon and help AIDS victims -- http://ICCF.nl/click1.html ///
