To: vim_dev@googlegroups.com
Subject: Patch 7.3.732
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.3.732
Problem:    Compiler warnings for function arguments.
Solution:   Use inteptr_t instead of long.
Files:	    src/if_mzsch.c


*** ../vim-7.3.731/src/if_mzsch.c	2012-10-14 03:41:54.000000000 +0200
--- src/if_mzsch.c	2012-11-24 14:00:31.000000000 +0100
***************
*** 142,148 ****
  static int do_mzscheme_command(exarg_T *, void *, Scheme_Closed_Prim *what);
  static void startup_mzscheme(void);
  static char *string_to_line(Scheme_Object *obj);
! static void do_output(char *mesg, long len);
  static void do_printf(char *format, ...);
  static void do_flush(void);
  static Scheme_Object *_apply_thunk_catch_exceptions(
--- 142,148 ----
  static int do_mzscheme_command(exarg_T *, void *, Scheme_Closed_Prim *what);
  static void startup_mzscheme(void);
  static char *string_to_line(Scheme_Object *obj);
! static void do_output(char *mesg, intptr_t len);
  static void do_printf(char *format, ...);
  static void do_flush(void);
  static Scheme_Object *_apply_thunk_catch_exceptions(
***************
*** 1349,1356 ****
  }
  
      static void
! do_output(char *mesg, long len UNUSED)
  {
      do_intrnl_output(mesg, 0);
  }
  
--- 1349,1357 ----
  }
  
      static void
! do_output(char *mesg, intptr_t len UNUSED)
  {
+     /* TODO: use len, the string may not be NUL terminated */
      do_intrnl_output(mesg, 0);
  }
  
***************
*** 1370,1376 ****
  do_flush(void)
  {
      char *buff;
!     long length;
  
      buff = scheme_get_sized_string_output(curerr, &length);
      MZ_GC_CHECK();
--- 1371,1377 ----
  do_flush(void)
  {
      char *buff;
!     intptr_t length;
  
      buff = scheme_get_sized_string_output(curerr, &length);
      MZ_GC_CHECK();
***************
*** 2588,2594 ****
  {
      char	*scheme_str = NULL;
      char	*vim_str = NULL;
!     long	len;
      int		i;
  
      scheme_str = scheme_display_to_string(obj, &len);
--- 2589,2595 ----
  {
      char	*scheme_str = NULL;
      char	*vim_str = NULL;
!     intptr_t	len;
      int		i;
  
      scheme_str = scheme_display_to_string(obj, &len);
***************
*** 2597,2606 ****
       * are replacing a single line, and we must replace it with
       * a single line.
       */
!     if (memchr(scheme_str, '\n', len))
  	scheme_signal_error(_("string cannot contain newlines"));
  
!     vim_str = (char *)alloc(len + 1);
  
      /* Create a copy of the string, with internal nulls replaced by
       * newline characters, as is the vim convention.
--- 2598,2607 ----
       * are replacing a single line, and we must replace it with
       * a single line.
       */
!     if (memchr(scheme_str, '\n', (size_t)len))
  	scheme_signal_error(_("string cannot contain newlines"));
  
!     vim_str = (char *)alloc((int)(len + 1));
  
      /* Create a copy of the string, with internal nulls replaced by
       * newline characters, as is the vim convention.
*** ../vim-7.3.731/src/version.c	2012-11-28 15:33:10.000000000 +0100
--- src/version.c	2012-11-28 15:34:30.000000000 +0100
***************
*** 727,728 ****
--- 727,730 ----
  {   /* Add new patch number below this line */
+ /**/
+     732,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
91. It's Saturday afternoon in the middle of May and you
    are on computer.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
