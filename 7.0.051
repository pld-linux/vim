To: vim-dev@vim.org
Subject: Patch 7.0.051
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
------------

Patch 7.0.051 (after 7.0.44)
Problem:    The Perl interface doesn't compile or doesn't work properly.
Solution:   Remove the spaces before #ifdef and avoid an empty line above it.
Files:	    src/if_perl.xs


*** ../vim-7.0.050/src/if_perl.xs	Tue Aug  8 16:47:38 2006
--- src/if_perl.xs	Fri Aug 11 22:51:01 2006
***************
*** 1068,1098 ****
  	    line = SvPV(ST(i),PL_na);
  	    if (lnum > 0 && lnum <= vimbuf->b_ml.ml_line_count && line != NULL)
  	    {
!     #ifdef FEAT_AUTOCMD
  		aco_save_T	aco;
  
  		/* set curwin/curbuf for "vimbuf" and save some things */
  		aucmd_prepbuf(&aco, vimbuf);
!     #else
  		buf_T	*save_curbuf = curbuf;
  
  		curbuf = vimbuf;
  		curwin->w_buffer = vimbuf;
!     #endif
  		if (u_savesub(lnum) == OK)
  		{
  		    ml_replace(lnum, (char_u *)line, TRUE);
  		    changed_bytes(lnum, 0);
  		}
! 
!     #ifdef FEAT_AUTOCMD
  		/* restore curwin/curbuf and a few other things */
  		aucmd_restbuf(&aco);
  		/* Careful: autocommands may have made "vimbuf" invalid! */
!     #else
  		curwin->w_buffer = save_curbuf;
  		curbuf = save_curbuf;
!     #endif
  	    }
  	}
      }
--- 1068,1097 ----
  	    line = SvPV(ST(i),PL_na);
  	    if (lnum > 0 && lnum <= vimbuf->b_ml.ml_line_count && line != NULL)
  	    {
! #ifdef FEAT_AUTOCMD
  		aco_save_T	aco;
  
  		/* set curwin/curbuf for "vimbuf" and save some things */
  		aucmd_prepbuf(&aco, vimbuf);
! #else
  		buf_T	*save_curbuf = curbuf;
  
  		curbuf = vimbuf;
  		curwin->w_buffer = vimbuf;
! #endif
  		if (u_savesub(lnum) == OK)
  		{
  		    ml_replace(lnum, (char_u *)line, TRUE);
  		    changed_bytes(lnum, 0);
  		}
! #ifdef FEAT_AUTOCMD
  		/* restore curwin/curbuf and a few other things */
  		aucmd_restbuf(&aco);
  		/* Careful: autocommands may have made "vimbuf" invalid! */
! #else
  		curwin->w_buffer = save_curbuf;
  		curbuf = save_curbuf;
! #endif
  	    }
  	}
      }
***************
*** 1130,1144 ****
  		if (lnum > 0 && lnum <= vimbuf->b_ml.ml_line_count)
  		{
  		    buf_T	*save_curbuf = curbuf;
!     #ifdef FEAT_AUTOCMD
  		    aco_save_T	aco;
  
  		    /* set curwin/curbuf for "vimbuf" and save some things */
  		    aucmd_prepbuf(&aco, vimbuf);
!     #else
  		    curbuf = vimbuf;
  		    curwin->w_buffer = vimbuf;
!     #endif
  		    if (u_savedel(lnum, 1) == OK)
  		    {
  			ml_delete(lnum, 0);
--- 1129,1143 ----
  		if (lnum > 0 && lnum <= vimbuf->b_ml.ml_line_count)
  		{
  		    buf_T	*save_curbuf = curbuf;
! #ifdef FEAT_AUTOCMD
  		    aco_save_T	aco;
  
  		    /* set curwin/curbuf for "vimbuf" and save some things */
  		    aucmd_prepbuf(&aco, vimbuf);
! #else
  		    curbuf = vimbuf;
  		    curwin->w_buffer = vimbuf;
! #endif
  		    if (u_savedel(lnum, 1) == OK)
  		    {
  			ml_delete(lnum, 0);
***************
*** 1146,1159 ****
  			if (save_curbuf == curbuf)
  			    check_cursor();
  		    }
!     #ifdef FEAT_AUTOCMD
  		    /* restore curwin/curbuf and a few other things */
  		    aucmd_restbuf(&aco);
  		    /* Careful: autocommands may have made "vimbuf" invalid! */
!     #else
  		    curwin->w_buffer = save_curbuf;
  		    curbuf = save_curbuf;
!     #endif
  		    update_curbuf(VALID);
  		}
  	    }
--- 1145,1158 ----
  			if (save_curbuf == curbuf)
  			    check_cursor();
  		    }
! #ifdef FEAT_AUTOCMD
  		    /* restore curwin/curbuf and a few other things */
  		    aucmd_restbuf(&aco);
  		    /* Careful: autocommands may have made "vimbuf" invalid! */
! #else
  		    curwin->w_buffer = save_curbuf;
  		    curbuf = save_curbuf;
! #endif
  		    update_curbuf(VALID);
  		}
  	    }
***************
*** 1180,1210 ****
  	    line = SvPV(ST(i),PL_na);
  	    if (lnum >= 0 && lnum <= vimbuf->b_ml.ml_line_count && line != NULL)
  	    {
!     #ifdef FEAT_AUTOCMD
  		aco_save_T	aco;
  
  		/* set curwin/curbuf for "vimbuf" and save some things */
  		aucmd_prepbuf(&aco, vimbuf);
!     #else
  		buf_T	*save_curbuf = curbuf;
  
  		curbuf = vimbuf;
  		curwin->w_buffer = vimbuf;
!     #endif
  		if (u_inssub(lnum + 1) == OK)
  		{
  		    ml_append(lnum, (char_u *)line, (colnr_T)0, FALSE);
  		    appended_lines_mark(lnum, 1L);
  		}
! 
!     #ifdef FEAT_AUTOCMD
  		/* restore curwin/curbuf and a few other things */
  		aucmd_restbuf(&aco);
  		/* Careful: autocommands may have made "vimbuf" invalid! */
!     #else
  		curwin->w_buffer = save_curbuf;
  		curbuf = save_curbuf;
!     #endif
  		update_curbuf(VALID);
  	    }
  	}
--- 1179,1208 ----
  	    line = SvPV(ST(i),PL_na);
  	    if (lnum >= 0 && lnum <= vimbuf->b_ml.ml_line_count && line != NULL)
  	    {
! #ifdef FEAT_AUTOCMD
  		aco_save_T	aco;
  
  		/* set curwin/curbuf for "vimbuf" and save some things */
  		aucmd_prepbuf(&aco, vimbuf);
! #else
  		buf_T	*save_curbuf = curbuf;
  
  		curbuf = vimbuf;
  		curwin->w_buffer = vimbuf;
! #endif
  		if (u_inssub(lnum + 1) == OK)
  		{
  		    ml_append(lnum, (char_u *)line, (colnr_T)0, FALSE);
  		    appended_lines_mark(lnum, 1L);
  		}
! #ifdef FEAT_AUTOCMD
  		/* restore curwin/curbuf and a few other things */
  		aucmd_restbuf(&aco);
  		/* Careful: autocommands may have made "vimbuf" invalid! */
! #else
  		curwin->w_buffer = save_curbuf;
  		curbuf = save_curbuf;
! #endif
  		update_curbuf(VALID);
  	    }
  	}
*** ../vim-7.0.050/src/version.c	Tue Aug  8 21:36:15 2006
--- src/version.c	Fri Aug 11 22:55:25 2006
***************
*** 668,669 ****
--- 668,671 ----
  {   /* Add new patch number below this line */
+ /**/
+     51,
  /**/

-- 
"A clear conscience is usually the sign of a bad memory."
                             -- Steven Wright

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\        download, build and distribute -- http://www.A-A-P.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
