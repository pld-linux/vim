To: vim_dev@googlegroups.com
Subject: Patch 7.3.720
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.3.720
Problem:    Proto files are outdated.
Solution:   Update the newly generated proto files.
Files:	    src/proto/digraph.pro, src/proto/fold.pro, src/proto/misc1.pro,
	    src/proto/move.pro, src/proto/screen.pro, src/proto/search.pro,
	    src/proto/os_win32.pro, src/proto/os_mswin.pro,
	    src/proto/os_beos.pro

*** ../vim-7.3.719/src/proto/digraph.pro	2010-08-15 21:57:28.000000000 +0200
--- src/proto/digraph.pro	2012-11-20 16:51:45.000000000 +0100
***************
*** 1,7 ****
  /* digraph.c */
  int do_digraph __ARGS((int c));
  int get_digraph __ARGS((int cmdline));
! int getdigraph __ARGS((int char1, int char2, int meta));
  void putdigraph __ARGS((char_u *str));
  void listdigraphs __ARGS((void));
  char_u *keymap_init __ARGS((void));
--- 1,7 ----
  /* digraph.c */
  int do_digraph __ARGS((int c));
  int get_digraph __ARGS((int cmdline));
! int getdigraph __ARGS((int char1, int char2, int meta_char));
  void putdigraph __ARGS((char_u *str));
  void listdigraphs __ARGS((void));
  char_u *keymap_init __ARGS((void));
*** ../vim-7.3.719/src/proto/fold.pro	2010-08-15 21:57:28.000000000 +0200
--- src/proto/fold.pro	2012-11-20 16:51:49.000000000 +0100
***************
*** 27,33 ****
  void foldUpdate __ARGS((win_T *wp, linenr_T top, linenr_T bot));
  void foldUpdateAll __ARGS((win_T *win));
  int foldMoveTo __ARGS((int updown, int dir, long count));
! void foldInitWin __ARGS((win_T *newwin));
  int find_wl_entry __ARGS((win_T *win, linenr_T lnum));
  void foldAdjustVisual __ARGS((void));
  void foldAdjustCursor __ARGS((void));
--- 27,33 ----
  void foldUpdate __ARGS((win_T *wp, linenr_T top, linenr_T bot));
  void foldUpdateAll __ARGS((win_T *win));
  int foldMoveTo __ARGS((int updown, int dir, long count));
! void foldInitWin __ARGS((win_T *new_win));
  int find_wl_entry __ARGS((win_T *win, linenr_T lnum));
  void foldAdjustVisual __ARGS((void));
  void foldAdjustCursor __ARGS((void));
*** ../vim-7.3.719/src/proto/misc1.pro	2012-08-15 14:04:50.000000000 +0200
--- src/proto/misc1.pro	2012-11-20 16:51:56.000000000 +0100
***************
*** 5,12 ****
  int get_indent_str __ARGS((char_u *ptr, int ts));
  int set_indent __ARGS((int size, int flags));
  int get_number_indent __ARGS((linenr_T lnum));
! int open_line __ARGS((int dir, int flags, int old_indent));
! int get_leader_len __ARGS((char_u *line, char_u **flags, int backward, int do_skip_space));
  int get_last_leader_offset __ARGS((char_u *line, char_u **flags));
  int plines __ARGS((linenr_T lnum));
  int plines_win __ARGS((win_T *wp, linenr_T lnum, int winheight));
--- 5,12 ----
  int get_indent_str __ARGS((char_u *ptr, int ts));
  int set_indent __ARGS((int size, int flags));
  int get_number_indent __ARGS((linenr_T lnum));
! int open_line __ARGS((int dir, int flags, int second_line_indent));
! int get_leader_len __ARGS((char_u *line, char_u **flags, int backward, int include_space));
  int get_last_leader_offset __ARGS((char_u *line, char_u **flags));
  int plines __ARGS((linenr_T lnum));
  int plines_win __ARGS((win_T *wp, linenr_T lnum, int winheight));
***************
*** 59,65 ****
  void vim_setenv __ARGS((char_u *name, char_u *val));
  char_u *get_env_name __ARGS((expand_T *xp, int idx));
  char_u *get_users __ARGS((expand_T *xp, int idx));
! int match_user __ARGS((char_u* name));
  void home_replace __ARGS((buf_T *buf, char_u *src, char_u *dst, int dstlen, int one));
  char_u *home_replace_save __ARGS((buf_T *buf, char_u *src));
  int fullpathcmp __ARGS((char_u *s1, char_u *s2, int checkname));
--- 59,65 ----
  void vim_setenv __ARGS((char_u *name, char_u *val));
  char_u *get_env_name __ARGS((expand_T *xp, int idx));
  char_u *get_users __ARGS((expand_T *xp, int idx));
! int match_user __ARGS((char_u *name));
  void home_replace __ARGS((buf_T *buf, char_u *src, char_u *dst, int dstlen, int one));
  char_u *home_replace_save __ARGS((buf_T *buf, char_u *src));
  int fullpathcmp __ARGS((char_u *s1, char_u *s2, int checkname));
*** ../vim-7.3.719/src/proto/move.pro	2010-08-15 21:57:28.000000000 +0200
--- src/proto/move.pro	2012-11-20 16:51:57.000000000 +0100
***************
*** 24,30 ****
  int curwin_col_off __ARGS((void));
  int win_col_off2 __ARGS((win_T *wp));
  int curwin_col_off2 __ARGS((void));
! void curs_columns __ARGS((int scroll));
  void scrolldown __ARGS((long line_count, int byfold));
  void scrollup __ARGS((long line_count, int byfold));
  void check_topfill __ARGS((win_T *wp, int down));
--- 24,30 ----
  int curwin_col_off __ARGS((void));
  int win_col_off2 __ARGS((win_T *wp));
  int curwin_col_off2 __ARGS((void));
! void curs_columns __ARGS((int may_scroll));
  void scrolldown __ARGS((long line_count, int byfold));
  void scrollup __ARGS((long line_count, int byfold));
  void check_topfill __ARGS((win_T *wp, int down));
*** ../vim-7.3.719/src/proto/screen.pro	2010-08-15 21:57:28.000000000 +0200
--- src/proto/screen.pro	2012-11-20 16:52:01.000000000 +0100
***************
*** 31,38 ****
  void screen_draw_rectangle __ARGS((int row, int col, int height, int width, int invert));
  void screen_fill __ARGS((int start_row, int end_row, int start_col, int end_col, int c1, int c2, int attr));
  void check_for_delay __ARGS((int check_msg_scroll));
! int screen_valid __ARGS((int clear));
! void screenalloc __ARGS((int clear));
  void free_screenlines __ARGS((void));
  void screenclear __ARGS((void));
  int can_clear __ARGS((char_u *p));
--- 31,38 ----
  void screen_draw_rectangle __ARGS((int row, int col, int height, int width, int invert));
  void screen_fill __ARGS((int start_row, int end_row, int start_col, int end_col, int c1, int c2, int attr));
  void check_for_delay __ARGS((int check_msg_scroll));
! int screen_valid __ARGS((int doclear));
! void screenalloc __ARGS((int doclear));
  void free_screenlines __ARGS((void));
  void screenclear __ARGS((void));
  int can_clear __ARGS((char_u *p));
*** ../vim-7.3.719/src/proto/search.pro	2012-07-25 15:06:20.000000000 +0200
--- src/proto/search.pro	2012-11-20 16:52:01.000000000 +0100
***************
*** 27,38 ****
  int end_word __ARGS((long count, int bigword, int stop, int empty));
  int bckend_word __ARGS((long count, int bigword, int eol));
  int current_word __ARGS((oparg_T *oap, long count, int include, int bigword));
- int current_search __ARGS((long count, int forward));
  int current_sent __ARGS((oparg_T *oap, long count, int include));
  int current_block __ARGS((oparg_T *oap, long count, int include, int what, int other));
  int current_tagblock __ARGS((oparg_T *oap, long count_arg, int include));
  int current_par __ARGS((oparg_T *oap, long count, int include, int type));
  int current_quote __ARGS((oparg_T *oap, long count, int include, int quotechar));
  int linewhite __ARGS((linenr_T lnum));
  void find_pattern_in_path __ARGS((char_u *ptr, int dir, int len, int whole, int skip_comments, int type, long count, int action, linenr_T start_lnum, linenr_T end_lnum));
  int read_viminfo_search_pattern __ARGS((vir_T *virp, int force));
--- 27,38 ----
  int end_word __ARGS((long count, int bigword, int stop, int empty));
  int bckend_word __ARGS((long count, int bigword, int eol));
  int current_word __ARGS((oparg_T *oap, long count, int include, int bigword));
  int current_sent __ARGS((oparg_T *oap, long count, int include));
  int current_block __ARGS((oparg_T *oap, long count, int include, int what, int other));
  int current_tagblock __ARGS((oparg_T *oap, long count_arg, int include));
  int current_par __ARGS((oparg_T *oap, long count, int include, int type));
  int current_quote __ARGS((oparg_T *oap, long count, int include, int quotechar));
+ int current_search __ARGS((long count, int forward));
  int linewhite __ARGS((linenr_T lnum));
  void find_pattern_in_path __ARGS((char_u *ptr, int dir, int len, int whole, int skip_comments, int type, long count, int action, linenr_T start_lnum, linenr_T end_lnum));
  int read_viminfo_search_pattern __ARGS((vir_T *virp, int force));
*** ../vim-7.3.719/src/proto/os_win32.pro	2011-05-05 18:31:54.000000000 +0200
--- src/proto/os_win32.pro	2012-11-20 16:52:13.000000000 +0100
***************
*** 22,28 ****
  int mch_isdir __ARGS((char_u *name));
  int mch_mkdir __ARGS((char_u *name));
  int mch_is_linked __ARGS((char_u *fname));
! int win32_fileinfo __ARGS((char_u *name, BY_HANDLE_FILE_INFORMATION *lpFileInfo));
  int mch_writable __ARGS((char_u *name));
  int mch_can_exe __ARGS((char_u *name));
  int mch_nodetype __ARGS((char_u *name));
--- 22,28 ----
  int mch_isdir __ARGS((char_u *name));
  int mch_mkdir __ARGS((char_u *name));
  int mch_is_linked __ARGS((char_u *fname));
! int win32_fileinfo __ARGS((char_u *fname, BY_HANDLE_FILE_INFORMATION *info));
  int mch_writable __ARGS((char_u *name));
  int mch_can_exe __ARGS((char_u *name));
  int mch_nodetype __ARGS((char_u *name));
*** ../vim-7.3.719/src/proto/os_mswin.pro	2010-08-15 21:57:28.000000000 +0200
--- src/proto/os_mswin.pro	2012-11-20 16:52:14.000000000 +0100
***************
*** 28,38 ****
  void WideCharToMultiByte_alloc __ARGS((UINT cp, DWORD flags, LPCWSTR in, int inlen, LPSTR *out, int *outlen, LPCSTR def, LPBOOL useddef));
  int clip_mch_own_selection __ARGS((VimClipboard *cbd));
  void clip_mch_lose_selection __ARGS((VimClipboard *cbd));
  short_u *enc_to_utf16 __ARGS((char_u *str, int *lenp));
  char_u *utf16_to_enc __ARGS((short_u *str, int *lenp));
- void clip_mch_request_selection __ARGS((VimClipboard *cbd));
  void acp_to_enc __ARGS((char_u *str, int str_size, char_u **out, int *outlen));
- void clip_mch_set_selection __ARGS((VimClipboard *cbd));
  void DumpPutS __ARGS((const char *psz));
  int mch_get_winpos __ARGS((int *x, int *y));
  void mch_set_winpos __ARGS((int x, int y));
--- 28,38 ----
  void WideCharToMultiByte_alloc __ARGS((UINT cp, DWORD flags, LPCWSTR in, int inlen, LPSTR *out, int *outlen, LPCSTR def, LPBOOL useddef));
  int clip_mch_own_selection __ARGS((VimClipboard *cbd));
  void clip_mch_lose_selection __ARGS((VimClipboard *cbd));
+ void clip_mch_request_selection __ARGS((VimClipboard *cbd));
+ void clip_mch_set_selection __ARGS((VimClipboard *cbd));
  short_u *enc_to_utf16 __ARGS((char_u *str, int *lenp));
  char_u *utf16_to_enc __ARGS((short_u *str, int *lenp));
  void acp_to_enc __ARGS((char_u *str, int str_size, char_u **out, int *outlen));
  void DumpPutS __ARGS((const char *psz));
  int mch_get_winpos __ARGS((int *x, int *y));
  void mch_set_winpos __ARGS((int x, int y));
*** ../vim-7.3.719/src/version.c	2012-11-20 16:53:34.000000000 +0100
--- src/version.c	2012-11-20 16:55:09.000000000 +0100
***************
*** 727,728 ****
--- 727,730 ----
  {   /* Add new patch number below this line */
+ /**/
+     720,
  /**/

-- 
Light travels faster than sound.  This is why some people
appear bright until you hear them speak

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
